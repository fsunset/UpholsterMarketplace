{% extends 'base.html.twig' %}

{% block body %}
    <article class="grid-container">
        <div class="grid-x top-margin-2em">
            <div class="cell">
                <h1>Find an Upholsterer in Your Area</h1>
            </div>

			<div id="searchCompanyFormError" class="small-12 medium-6 large-4 cell hide">
	            <div class="callout alert">
 					<p>All fields are required.</p>
				</div>
			</div>
        </div>

        <div class="grid-x search-form-container">
		    <div class="cell">
		        <form id="searchCompanyForm" data-abide novalidate>
		            <div class="grid-container">
		                <div class="grid-x grid-padding-x align-middle">
		                    <div class="large-3 cell">
		                        <label class="top-margin-0-5em">State
		                            <select name="state" id="state" aria-errormessage="stateErrorField" required>
										<option value="">Loading...</option>
									</select>
									<span class="form-error" id="stateErrorField">
                                        Please select an state.
                                    </span>
		                        </label>
		                    </div>
		                    <div class="large-3 cell">
		                        <label class="top-margin-0-5em">County
									<select name="county" id="county" aria-errormessage="countyErrorField" required>
										<option value=""></option>
									</select>
									<span class="form-error" id="countyErrorField">
                                        Please select a county.
                                    </span>
		                        </label>
		                    </div>
		                    <div class="large-3 cell">
		                        <label class="top-margin-0-5em">City
									<select name="city" id="city" aria-errormessage="cityErrorField" required>
										<option value=""></option>
									</select>
									<span class="form-error" id="cityErrorField">
                                        Please select a city.
                                    </span>
		                        </label>
		                    </div>
		                    <div class="large-3 cell text-center">
		                        <input type="submit" class="button no-bottom-margin expanded" value="Search">
		                    </div>
		                </div>
		            </div>
		        </form>
		    </div>
		</div>
    </article>

    <article class="grid-container">
        <div class="grid-x">
            <div class="cell top-margin-2em bottom-margin-1em">
                <h2 class="display-inline-block">Top <span class="city-top-companies"></span> Upholsterers</h2> | <a href="">See All <span class="city-top-companies"></span> Upholsterers</a>

                <p>
                	Individuals and companies listed here are local upholstery companies that match your search. Upholster.com does not verify the work of these local vendors and can not vouch for the quality of their work.
                </p>
            </div>
        </div>

        <div id="companiesContainer">
        	<div class="grid-x grid-margin-x">
	        	{% for company in companies %}
		            {% include './partials/companyCard.html.twig' with {'company': company} %}
	            {% endfor %}
	        </div>
        </div>
    </article>
{% endblock %}

{% block javascripts %}
	{{ parent() }}

    <script src="https://upholster-marketplace.herokuapp.com/js/geodata-jsr-class.js"></script>
    <script>
		$(function() {
			// Load All U.S.A. States
			getplaces(6252001,'state');

			let selectedState = selectedCounty = selectedCity = '',
				$searchCompanyForm = $("#searchCompanyForm"),
				$searchCompanyFormError = $("#searchCompanyFormError"),
				$companiesContainer = $("#companiesContainer"),
				$cityTopCompanies = $(".city-top-companies"),
				$countyDropdown = $("#county"),
				$cityDropdown = $("#city");

		    $(document)
		    	// Set location vars for AJAX call
		    	.on("change", "#state, #county, #city", function() {
		    		let thisId = $(this).attr("id");

		    		switch(thisId) {
		    			case "state":
		    			selectedState = $("#" + thisId + " option:selected").text();
		    			selectedCounty = selectedCity = '';
		    			$countyDropdown.html("<option value=''>Loading...</option>");
		    			$cityDropdown.html("");
		    			break;
		    			case "county":
		    			selectedCounty = $("#" + thisId + " option:selected").text();
		    			selectedCity = '';
		    			$cityDropdown.html("<option value=''>Loading...</option>");
		    			break;
		    			case "city":
		    			selectedCity = $("#" + thisId + " option:selected").text();
		    			break;
		    		}
		    	})
			    
			    // Run function to search each dropdown "child"
			    .on("change", "#state, #county", function() {
			    	let $this = $(this),
			    		elementValue = $this.val(),
			    		elementType = $this.attr("id"),
			    		param = elementType == "state" ? "county" : "city";

			    	getplaces(elementValue, param);
			    });
			
			$searchCompanyForm.on("submit", function(e) {
				e.preventDefault();

				if (selectedState != '' && selectedCounty != '' && selectedCity != '' && selectedState != 'Select' && selectedCounty != 'Select' && selectedCity != 'Select') {
					performCompanySearch();
				}
			});

			// Get companies by location
			function performCompanySearch() {
		    	$.ajax({
		    		type: "POST",
		    		url: "{{ path('searchCompany') }}",
		    		data: {
		    			"selectedState": selectedState,
		    			"selectedCounty": selectedCounty,
		    			"selectedCity": selectedCity
		    		},
		    		beforeSend: function() {
		    			$companiesContainer.html("<div class='small-12 cell text-center'><img src='{{ asset('build/img/spinner.gif') }}'></div>");
				    },
		    		success: function(companies) {
		    			$cityTopCompanies.html(selectedCity);
		    			$companiesContainer.html("<div class='grid-x grid-margin-x'>" + companies.htmlCode + "</div>");
		    		},
		    		error: function(xhr, status, error) {
		    			var err = eval("(" + xhr.responseText + ")");
		    			alert(err.Message);
		    		}
		    	});
		    }
		});

	    
		// Geonames JS code
	    let whos = request = null;
		function getplaces(gid, src) {
			whos = src
			request = "http://www.geonames.org/childrenJSON?geonameId="+gid+"&callback=listPlaces&style=short";
			aObj = new JSONscriptRequest(request);
			aObj.buildScriptTag();
			aObj.addScriptTag();
		}

		function listPlaces(jData) {
			counts = jData.geonames.length<jData.totalResultsCount ? jData.geonames.length : jData.totalResultsCount
			who = document.getElementById(whos)
			who.options.length = 0;

			if(counts)who.options[who.options.length] = new Option('Select','')
			else who.options[who.options.length] = new Option('No Data Available','NULL')
					
			for(let i=0; i<counts; i++){
				if(!jData.geonames[i].name.includes("City of")){
					who.options[who.options.length] = new Option(jData.geonames[i].name, jData.geonames[i].geonameId);
				}
			}

			jData = null		
		}
    </script>
{% endblock %}
